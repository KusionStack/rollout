name: e2e-StatefulSet

on:
  pull_request:
    branches: [ 'main', 'release-*' ]

defaults:
  run:
    shell: bash

env:
  GO_VERSION: '1.21'
  NAMESPACE: 'rollout-system'
  KIND_IMAGE: 'kindest/node:v1.19.16'
  KIND_CLUSTER_NAME: 'ci-testing'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          node_image: ${{ env.KIND_IMAGE }}
          cluster_name: ${{ env.KIND_CLUSTER_NAME }}
          config: ./test/e2e/kind-conf.yaml

      - name: Build image
        run: |
          export IMAGE="kusionstack.io/rollout-rollout:e2e-${GITHUB_RUN_ID}"
          docker build --pull --no-cache . -t $IMAGE
          kind load docker-image --name=${KIND_CLUSTER_NAME} $IMAGE || { echo >&2 "kind not installed or error loading image: $IMAGE"; exit 1; }


      - name: Install Operating
        run: |
          set -ex
          kubectl cluster-info
          make helm
          helm repo add kusionstack https://kusionstack.github.io/charts
          helm repo update kusionstack
          helm install operating kusionstack/operating
          for ((i=1;i<30;i++));
          do
            set +e
            kubectl get sts -n kusionstack-system -owide
            PODS=$(kubectl get sts -n kusionstack-system | grep '3/3' | wc -l)
            set -e
            if [ "$PODS" -eq "1" ]; then
              break
            fi
            sleep 3
          done
          set +e
          PODS=$(kubectl get sts -n kusionstack-system | grep '3/3' | wc -l)
          set -e
          if [ "$PODS" -eq "1" ]; then
            echo "Wait for kusionstack-operating ready successfully"
          else
            echo "Timeout to wait for kusionstack-operating ready"
            exit 1
          fi


      - name: Install kusionStack Rollout
        run: |
          set -ex
          kubectl cluster-info
          NS=${{ env.NAMESPACE }}
          IMG=kusionstack.io/rollout-rollout:e2e-${GITHUB_RUN_ID} make deploy
          for ((i=1;i<10;i++));
          do
            set +e
            PODS=$(kubectl get pod -n $NS | grep '2/2' | wc -l)
            set -e
            if [ "$PODS" -eq "1" ]; then
              break
            fi
            sleep 3
          done
          set +e
          PODS=$(kubectl get pod -n $NS | grep '2/2' | wc -l)
          set -e
          if [ "$PODS" -eq "1" ]; then
            echo "Wait for $NS ready successfully"
          else
            echo "Timeout to wait for $NS ready"
            kubectl get pod -n $NS --no-headers | awk '{print $1}' | xargs kubectl logs -p -n $NS -c manager
            kubectl get pod -n $NS --no-headers | awk '{print $1}' | xargs kubectl logs -n $NS -c manager
            exit 1
          fi


      - name: Run E2E Tests For StatefulSet
        run: |
          export TEST_USE_EXISTING_CLUSTER=true
          export FEATURE_GATES="UseDefaultExecutor=true"
          export KUBECONFIG=/home/runner/.kube/config
          make ginkgo
          set +e
          ./bin/ginkgo -timeout 60m -v --focus='StatefulSet' test/e2e