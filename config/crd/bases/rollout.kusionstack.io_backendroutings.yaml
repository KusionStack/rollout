apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: backendroutings.rollout.kusionstack.io
spec:
  group: rollout.kusionstack.io
  names:
    kind: BackendRouting
    listKind: BackendRoutingList
    plural: backendroutings
    shortNames:
    - bkr
    singular: backendrouting
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.trafficType
      name: TYPE
      type: string
    - jsonPath: .spec.backend.name
      name: BACKEND
      type: string
    - jsonPath: .spec.routes[*].name
      name: ROUTES
      type: string
    - jsonPath: .status.backends.stable.name
      name: STABLE
      type: string
    - jsonPath: .status.backends.canary.name
      name: CANARY
      type: string
    - format: date-time
      jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          BackendRouting defines defines the association between frontend routes and
          backend service, and it allows the user to define forwarding rules for canary scenario.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              backend:
                description: Backend defines the reference to a kind of backend
                properties:
                  apiVersion:
                    description: |-
                      APIVersion is the group/version for the resource being referenced.
                      If APIVersion is not specified, the specified Kind must be in the core API group.
                      For any other third-party types, APIVersion is required.
                    type: string
                  cluster:
                    description: Cluster indicates the name of cluster
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the resource name
                    type: string
                required:
                - kind
                - name
                type: object
              forkedBackends:
                description: ForkedBackends
                properties:
                  canary:
                    description: the temporary canary backend service name, generally it is the {originServiceName}-canary
                    properties:
                      extraLabelSelector:
                        additionalProperties:
                          type: string
                        description: ExtraLabelSelector defines the extra label selector for the temporary backend to select specific pods
                        type: object
                      name:
                        description: the temporary backend name
                        type: string
                    required:
                    - name
                    type: object
                  stable:
                    description: the temporary stable backend service name, generally it is the {originServiceName}-stable
                    properties:
                      extraLabelSelector:
                        additionalProperties:
                          type: string
                        description: ExtraLabelSelector defines the extra label selector for the temporary backend to select specific pods
                        type: object
                      name:
                        description: the temporary backend name
                        type: string
                    required:
                    - name
                    type: object
                required:
                - canary
                - stable
                type: object
              forwarding:
                description: Forwarding defines the forwarding rules for canary scenario
                properties:
                  http:
                    properties:
                      canary:
                        properties:
                          backendName:
                            type: string
                          filters:
                            description: |-
                              Filters define the filters that are applied to requests that match
                              this rule.


                              The effects of ordering of multiple behaviors are currently unspecified.
                              This can change in the future based on feedback during the alpha stage.


                              Conformance-levels at this level are defined based on the type of filter:


                              - ALL core filters MUST be supported by all implementations.
                              - Implementers are encouraged to support extended filters.
                              - Implementation-specific custom filters have no API guarantees across
                                implementations.


                              Specifying the same filter multiple times is not supported unless explicitly
                              indicated in the filter.


                              All filters are expected to be compatible with each other except for the
                              URLRewrite and RequestRedirect filters, which may not be combined. If an
                              implementation can not support other combinations of filters, they must clearly
                              document that limitation. In cases where incompatible or unsupported
                              filters are specified and cause the `Accepted` condition to be set to status
                              `False`, implementations may use the `IncompatibleFilters` reason to specify
                              this configuration error.


                              Support: Core
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    This filter can be used multiple times within the same rule.


                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended


                                    <gateway:experimental:validation:XValidation:message="Only one of percent or fraction may be specified in HTTPRequestMirrorFilter",rule="!(has(self.percent) && has(self.fraction))">
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                    fraction:
                                      description: |-
                                        Fraction represents the fraction of requests that should be
                                        mirrored to BackendRef.


                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.


                                        <gateway:experimental>
                                      properties:
                                        denominator:
                                          default: 100
                                          format: int32
                                          minimum: 1
                                          type: integer
                                        numerator:
                                          format: int32
                                          minimum: 0
                                          type: integer
                                      required:
                                      - numerator
                                      type: object
                                    percent:
                                      description: |-
                                        Percent represents the percentage of requests that should be
                                        mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                        requests) and its maximum value is 100 (indicating 100% of requests).


                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.


                                        <gateway:experimental>
                                      format: int32
                                      maximum: 100
                                      minimum: 0
                                      type: integer
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.


                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.


                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.


                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:


                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.


                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:


                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.


                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.


                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.


                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                  type: object
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                          matches:
                            description: |-
                              Matches define conditions used for matching the rule against incoming
                              HTTP requests. Each match is independent, i.e. this rule will be matched
                              if **any** one of the matches is satisfied.


                              For example, take the following matches configuration:


                              ```
                              matches:
                              - path:
                                  value: "/foo"
                                headers:
                                - name: "version"
                                  value: "v2"
                              - path:
                                  value: "/v2/foo"
                              ```


                              For a request to match against this rule, a request must satisfy
                              EITHER of the two conditions:


                              - path prefixed with `/foo` AND contains the header `version: v2`
                              - path prefix of `/v2/foo`


                              See the documentation for HTTPRouteMatch on how to specify multiple
                              match conditions that should be ANDed together.


                              If no matches are specified, the default is a prefix
                              path match on "/", which has the effect of matching every
                              HTTP request.


                              Proxy or Load Balancer routing configuration generated from HTTPRoutes
                              MUST prioritize matches based on the following criteria, continuing on
                              ties. Across all rules specified on applicable Routes, precedence must be
                              given to the match having:


                              * "Exact" path match.
                              * "Prefix" path match with largest number of characters.
                              * Method match.
                              * Largest number of header matches.
                              * Largest number of query param matches.


                              Note: The precedence of RegularExpression path matches are implementation-specific.


                              If ties still exist across multiple Routes, matching precedence MUST be
                              determined in order of the following criteria, continuing on ties:


                              * The oldest Route based on creation timestamp.
                              * The Route appearing first in alphabetical order by
                                "{namespace}/{name}".


                              If ties still exist within an HTTPRoute, matching precedence MUST be granted
                              to the FIRST matching rule (in list order) with a match meeting the above
                              criteria.


                              When no rules matching a request have been successfully attached to the
                              parent a request is coming from, a HTTP 404 status code MUST be returned.
                            items:
                              properties:
                                headers:
                                  description: |-
                                    Headers specifies HTTP request header matchers. Multiple match values are
                                    ANDed together, meaning, a request must match all the specified headers
                                    to select the route.
                                  items:
                                    description: |-
                                      HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                      headers.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP Header to be matched. Name matching MUST be
                                          case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                          If multiple entries specify equivalent header names, only the first
                                          entry with an equivalent name MUST be considered for a match. Subsequent
                                          entries with an equivalent header name MUST be ignored. Due to the
                                          case-insensitivity of header names, "foo" and "Foo" are considered
                                          equivalent.


                                          When a header is repeated in an HTTP request, it is
                                          implementation-specific behavior as to how this is represented.
                                          Generally, proxies should follow the guidance from the RFC:
                                          https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                          processing a repeated header, with special handling for "Set-Cookie".
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      type:
                                        default: Exact
                                        description: |-
                                          Type specifies how to match against the value of the header.


                                          Support: Core (Exact)


                                          Support: Implementation-specific (RegularExpression)


                                          Since RegularExpression HeaderMatchType has implementation-specific
                                          conformance, implementations can support POSIX, PCRE or any other dialects
                                          of regular expressions. Please read the implementation's documentation to
                                          determine the supported dialect.
                                        enum:
                                        - Exact
                                        - RegularExpression
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                path:
                                  description: Path specifies a HTTP request path matcher.
                                  properties:
                                    type:
                                      default: PathPrefix
                                      description: |-
                                        Type specifies how to match against the path Value.


                                        Support: Core (Exact, PathPrefix)


                                        Support: Implementation-specific (RegularExpression)
                                      enum:
                                      - Exact
                                      - PathPrefix
                                      - RegularExpression
                                      type: string
                                    value:
                                      default: /
                                      description: Value of the HTTP path to match against.
                                      maxLength: 1024
                                      type: string
                                  type: object
                                queryParams:
                                  description: |-
                                    QueryParams specifies HTTP query parameter matchers. Multiple match
                                    values are ANDed together, meaning, a request must match all the
                                    specified query parameters to select the route.


                                    Support: Extended
                                  items:
                                    description: |-
                                      HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                      query parameters.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP query param to be matched. This must be an
                                          exact string match. (See
                                          https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                          If multiple entries specify equivalent query param names, only the first
                                          entry with an equivalent name MUST be considered for a match. Subsequent
                                          entries with an equivalent query param name MUST be ignored.


                                          If a query param is repeated in an HTTP request, the behavior is
                                          purposely left undefined, since different data planes have different
                                          capabilities. However, it is *recommended* that implementations should
                                          match against the first value of the param if the data plane supports it,
                                          as this behavior is expected in other load balancing contexts outside of
                                          the Gateway API.


                                          Users SHOULD NOT route traffic based on repeated query params to guard
                                          themselves against potential differences in the implementations.
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      type:
                                        default: Exact
                                        description: |-
                                          Type specifies how to match against the value of the query parameter.


                                          Support: Extended (Exact)


                                          Support: Implementation-specific (RegularExpression)


                                          Since RegularExpression QueryParamMatchType has Implementation-specific
                                          conformance, implementations can support POSIX, PCRE or any other
                                          dialects of regular expressions. Please read the implementation's
                                          documentation to determine the supported dialect.
                                        enum:
                                        - Exact
                                        - RegularExpression
                                        type: string
                                      value:
                                        description: Value is the value of HTTP query param to be matched.
                                        maxLength: 1024
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                            maxItems: 8
                            type: array
                          weight:
                            description: Weight indicate how many percentage of traffic the canary pods should receive
                            format: int32
                            maximum: 100
                            minimum: 0
                            type: integer
                        type: object
                      origin:
                        properties:
                          backendName:
                            type: string
                        type: object
                      stable:
                        properties:
                          backendName:
                            type: string
                          filters:
                            description: |-
                              Filters define the filters that are applied to requests that match
                              this rule.


                              The effects of ordering of multiple behaviors are currently unspecified.
                              This can change in the future based on feedback during the alpha stage.


                              Conformance-levels at this level are defined based on the type of filter:


                              - ALL core filters MUST be supported by all implementations.
                              - Implementers are encouraged to support extended filters.
                              - Implementation-specific custom filters have no API guarantees across
                                implementations.


                              Specifying the same filter multiple times is not supported unless explicitly
                              indicated in the filter.


                              All filters are expected to be compatible with each other except for the
                              URLRewrite and RequestRedirect filters, which may not be combined. If an
                              implementation can not support other combinations of filters, they must clearly
                              document that limitation. In cases where incompatible or unsupported
                              filters are specified and cause the `Accepted` condition to be set to status
                              `False`, implementations may use the `IncompatibleFilters` reason to specify
                              this configuration error.


                              Support: Core
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    This filter can be used multiple times within the same rule.


                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended


                                    <gateway:experimental:validation:XValidation:message="Only one of percent or fraction may be specified in HTTPRequestMirrorFilter",rule="!(has(self.percent) && has(self.fraction))">
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                    fraction:
                                      description: |-
                                        Fraction represents the fraction of requests that should be
                                        mirrored to BackendRef.


                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.


                                        <gateway:experimental>
                                      properties:
                                        denominator:
                                          default: 100
                                          format: int32
                                          minimum: 1
                                          type: integer
                                        numerator:
                                          format: int32
                                          minimum: 0
                                          type: integer
                                      required:
                                      - numerator
                                      type: object
                                    percent:
                                      description: |-
                                        Percent represents the percentage of requests that should be
                                        mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                        requests) and its maximum value is 100 (indicating 100% of requests).


                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.


                                        <gateway:experimental>
                                      format: int32
                                      maximum: 100
                                      minimum: 0
                                      type: integer
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.


                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.


                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.


                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:


                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.


                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:


                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.


                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.


                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.


                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                  type: object
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                          matches:
                            description: |-
                              Matches define conditions used for matching the rule against incoming
                              HTTP requests. Each match is independent, i.e. this rule will be matched
                              if **any** one of the matches is satisfied.


                              For example, take the following matches configuration:


                              ```
                              matches:
                              - path:
                                  value: "/foo"
                                headers:
                                - name: "version"
                                  value: "v2"
                              - path:
                                  value: "/v2/foo"
                              ```


                              For a request to match against this rule, a request must satisfy
                              EITHER of the two conditions:


                              - path prefixed with `/foo` AND contains the header `version: v2`
                              - path prefix of `/v2/foo`


                              See the documentation for HTTPRouteMatch on how to specify multiple
                              match conditions that should be ANDed together.


                              If no matches are specified, the default is a prefix
                              path match on "/", which has the effect of matching every
                              HTTP request.


                              Proxy or Load Balancer routing configuration generated from HTTPRoutes
                              MUST prioritize matches based on the following criteria, continuing on
                              ties. Across all rules specified on applicable Routes, precedence must be
                              given to the match having:


                              * "Exact" path match.
                              * "Prefix" path match with largest number of characters.
                              * Method match.
                              * Largest number of header matches.
                              * Largest number of query param matches.


                              Note: The precedence of RegularExpression path matches are implementation-specific.


                              If ties still exist across multiple Routes, matching precedence MUST be
                              determined in order of the following criteria, continuing on ties:


                              * The oldest Route based on creation timestamp.
                              * The Route appearing first in alphabetical order by
                                "{namespace}/{name}".


                              If ties still exist within an HTTPRoute, matching precedence MUST be granted
                              to the FIRST matching rule (in list order) with a match meeting the above
                              criteria.


                              When no rules matching a request have been successfully attached to the
                              parent a request is coming from, a HTTP 404 status code MUST be returned.
                            items:
                              properties:
                                headers:
                                  description: |-
                                    Headers specifies HTTP request header matchers. Multiple match values are
                                    ANDed together, meaning, a request must match all the specified headers
                                    to select the route.
                                  items:
                                    description: |-
                                      HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                      headers.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP Header to be matched. Name matching MUST be
                                          case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                          If multiple entries specify equivalent header names, only the first
                                          entry with an equivalent name MUST be considered for a match. Subsequent
                                          entries with an equivalent header name MUST be ignored. Due to the
                                          case-insensitivity of header names, "foo" and "Foo" are considered
                                          equivalent.


                                          When a header is repeated in an HTTP request, it is
                                          implementation-specific behavior as to how this is represented.
                                          Generally, proxies should follow the guidance from the RFC:
                                          https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                          processing a repeated header, with special handling for "Set-Cookie".
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      type:
                                        default: Exact
                                        description: |-
                                          Type specifies how to match against the value of the header.


                                          Support: Core (Exact)


                                          Support: Implementation-specific (RegularExpression)


                                          Since RegularExpression HeaderMatchType has implementation-specific
                                          conformance, implementations can support POSIX, PCRE or any other dialects
                                          of regular expressions. Please read the implementation's documentation to
                                          determine the supported dialect.
                                        enum:
                                        - Exact
                                        - RegularExpression
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                path:
                                  description: Path specifies a HTTP request path matcher.
                                  properties:
                                    type:
                                      default: PathPrefix
                                      description: |-
                                        Type specifies how to match against the path Value.


                                        Support: Core (Exact, PathPrefix)


                                        Support: Implementation-specific (RegularExpression)
                                      enum:
                                      - Exact
                                      - PathPrefix
                                      - RegularExpression
                                      type: string
                                    value:
                                      default: /
                                      description: Value of the HTTP path to match against.
                                      maxLength: 1024
                                      type: string
                                  type: object
                                queryParams:
                                  description: |-
                                    QueryParams specifies HTTP query parameter matchers. Multiple match
                                    values are ANDed together, meaning, a request must match all the
                                    specified query parameters to select the route.


                                    Support: Extended
                                  items:
                                    description: |-
                                      HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                      query parameters.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP query param to be matched. This must be an
                                          exact string match. (See
                                          https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                          If multiple entries specify equivalent query param names, only the first
                                          entry with an equivalent name MUST be considered for a match. Subsequent
                                          entries with an equivalent query param name MUST be ignored.


                                          If a query param is repeated in an HTTP request, the behavior is
                                          purposely left undefined, since different data planes have different
                                          capabilities. However, it is *recommended* that implementations should
                                          match against the first value of the param if the data plane supports it,
                                          as this behavior is expected in other load balancing contexts outside of
                                          the Gateway API.


                                          Users SHOULD NOT route traffic based on repeated query params to guard
                                          themselves against potential differences in the implementations.
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      type:
                                        default: Exact
                                        description: |-
                                          Type specifies how to match against the value of the query parameter.


                                          Support: Extended (Exact)


                                          Support: Implementation-specific (RegularExpression)


                                          Since RegularExpression QueryParamMatchType has Implementation-specific
                                          conformance, implementations can support POSIX, PCRE or any other
                                          dialects of regular expressions. Please read the implementation's
                                          documentation to determine the supported dialect.
                                        enum:
                                        - Exact
                                        - RegularExpression
                                        type: string
                                      value:
                                        description: Value is the value of HTTP query param to be matched.
                                        maxLength: 1024
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                            maxItems: 8
                            type: array
                        type: object
                    type: object
                type: object
              routes:
                description: Routes defines the list of routes
                items:
                  description: CrossClusterObjectReference is a reference to a kubernetes object in a different cluster.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion is the group/version for the resource being referenced.
                        If APIVersion is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIVersion is required.
                      type: string
                    cluster:
                      description: Cluster indicates the name of cluster
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the resource name
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              trafficType:
                description: TrafficType defines the type of traffic
                type: string
            required:
            - backend
            - trafficType
            type: object
          status:
            properties:
              backends:
                description: |-
                  Phase indicates the current phase of this object.
                  Phase BackendRoutingPhase `json:"phase,omitempty"`
                  current backends routing
                properties:
                  canary:
                    description: Canary backend status
                    properties:
                      conditions:
                        description: Conditions represents the current condition of an backend.
                        properties:
                          ready:
                            description: |-
                              ready indicates that this endpoint is prepared to receive traffic,
                              according to whatever system is managing the endpoint. A nil value
                              indicates an unknown state. In most cases consumers should interpret this
                              unknown state as ready. For compatibility reasons, ready should never be
                              "true" for terminating endpoints.
                            type: boolean
                          terminating:
                            description: |-
                              terminating indicates that this endpoint is terminating. A nil value
                              indicates an unknown state. Consumers should interpret this unknown state
                              to mean that the endpoint is not terminating.
                            type: boolean
                        type: object
                      name:
                        description: Name is the name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  origin:
                    description: Origin backend status
                    properties:
                      conditions:
                        description: Conditions represents the current condition of an backend.
                        properties:
                          ready:
                            description: |-
                              ready indicates that this endpoint is prepared to receive traffic,
                              according to whatever system is managing the endpoint. A nil value
                              indicates an unknown state. In most cases consumers should interpret this
                              unknown state as ready. For compatibility reasons, ready should never be
                              "true" for terminating endpoints.
                            type: boolean
                          terminating:
                            description: |-
                              terminating indicates that this endpoint is terminating. A nil value
                              indicates an unknown state. Consumers should interpret this unknown state
                              to mean that the endpoint is not terminating.
                            type: boolean
                        type: object
                      name:
                        description: Name is the name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  stable:
                    description: Stable backend status
                    properties:
                      conditions:
                        description: Conditions represents the current condition of an backend.
                        properties:
                          ready:
                            description: |-
                              ready indicates that this endpoint is prepared to receive traffic,
                              according to whatever system is managing the endpoint. A nil value
                              indicates an unknown state. In most cases consumers should interpret this
                              unknown state as ready. For compatibility reasons, ready should never be
                              "true" for terminating endpoints.
                            type: boolean
                          terminating:
                            description: |-
                              terminating indicates that this endpoint is terminating. A nil value
                              indicates an unknown state. Consumers should interpret this unknown state
                              to mean that the endpoint is not terminating.
                            type: boolean
                        type: object
                      name:
                        description: Name is the name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                type: object
              conditions:
                description: Conditions is the list of conditions
                items:
                  description: |-
                    Condition contains details for one aspect of the current state of this API Resource.
                    ---
                    This struct is intended for direct use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{
                        // Represents the observations of a foo's current state.
                        // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
                        // +patchMergeKey=type
                        // +patchStrategy=merge
                        // +listType=map
                        // +listMapKey=type
                        Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"`


                        // other fields
                    }
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed.
                format: int64
                type: integer
              routes:
                description: route statuses
                items:
                  description: BackendRouteStatus defines the status of a backend route.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion is the group/version for the resource being referenced.
                        If APIVersion is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIVersion is required.
                      type: string
                    cluster:
                      description: Cluster indicates the name of cluster
                      type: string
                    condition:
                      description: |-
                        Condition contains details for one aspect of the current state of this API Resource.
                        ---
                        This struct is intended for direct use as an array at the field path .status.conditions.  For example,
                        type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
                            // +patchMergeKey=type
                            // +patchStrategy=merge
                            // +listType=map
                            // +listMapKey=type
                            Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"`


                            // other fields
                        }
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    forwarding:
                      properties:
                        canary:
                          properties:
                            backendName:
                              description: Name is the name of the referent.
                              type: string
                            conditions:
                              description: Backendonditions represents the current condition of an backend.
                              properties:
                                ready:
                                  description: |-
                                    ready indicates that this endpoint is prepared to receive traffic,
                                    according to whatever system is managing the endpoint. A nil value
                                    indicates an unknown state. In most cases consumers should interpret this
                                    unknown state as ready. For compatibility reasons, ready should never be
                                    "true" for terminating endpoints.
                                  type: boolean
                                terminating:
                                  description: |-
                                    terminating indicates that this endpoint is terminating. A nil value
                                    indicates an unknown state. Consumers should interpret this unknown state
                                    to mean that the endpoint is not terminating.
                                  type: boolean
                              type: object
                          required:
                          - backendName
                          type: object
                        origin:
                          properties:
                            backendName:
                              description: Name is the name of the referent.
                              type: string
                            conditions:
                              description: Backendonditions represents the current condition of an backend.
                              properties:
                                ready:
                                  description: |-
                                    ready indicates that this endpoint is prepared to receive traffic,
                                    according to whatever system is managing the endpoint. A nil value
                                    indicates an unknown state. In most cases consumers should interpret this
                                    unknown state as ready. For compatibility reasons, ready should never be
                                    "true" for terminating endpoints.
                                  type: boolean
                                terminating:
                                  description: |-
                                    terminating indicates that this endpoint is terminating. A nil value
                                    indicates an unknown state. Consumers should interpret this unknown state
                                    to mean that the endpoint is not terminating.
                                  type: boolean
                              type: object
                          required:
                          - backendName
                          type: object
                        stable:
                          properties:
                            backendName:
                              description: Name is the name of the referent.
                              type: string
                            conditions:
                              description: Backendonditions represents the current condition of an backend.
                              properties:
                                ready:
                                  description: |-
                                    ready indicates that this endpoint is prepared to receive traffic,
                                    according to whatever system is managing the endpoint. A nil value
                                    indicates an unknown state. In most cases consumers should interpret this
                                    unknown state as ready. For compatibility reasons, ready should never be
                                    "true" for terminating endpoints.
                                  type: boolean
                                terminating:
                                  description: |-
                                    terminating indicates that this endpoint is terminating. A nil value
                                    indicates an unknown state. Consumers should interpret this unknown state
                                    to mean that the endpoint is not terminating.
                                  type: boolean
                              type: object
                          required:
                          - backendName
                          type: object
                      type: object
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the resource name
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
