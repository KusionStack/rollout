//go:build !ignore_autogenerated

// Copyright 2024 The KusionStack Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
	"sigs.k8s.io/gateway-api/apis/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendConditions) DeepCopyInto(out *BackendConditions) {
	*out = *in
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.Terminating != nil {
		in, out := &in.Terminating, &out.Terminating
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendConditions.
func (in *BackendConditions) DeepCopy() *BackendConditions {
	if in == nil {
		return nil
	}
	out := new(BackendConditions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendForwarding) DeepCopyInto(out *BackendForwarding) {
	*out = *in
	out.Stable = in.Stable
	in.Canary.DeepCopyInto(&out.Canary)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendForwarding.
func (in *BackendForwarding) DeepCopy() *BackendForwarding {
	if in == nil {
		return nil
	}
	out := new(BackendForwarding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendRef) DeepCopyInto(out *BackendRef) {
	*out = *in
	if in.APIVersion != nil {
		in, out := &in.APIVersion, &out.APIVersion
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendRef.
func (in *BackendRef) DeepCopy() *BackendRef {
	if in == nil {
		return nil
	}
	out := new(BackendRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendRouteStatus) DeepCopyInto(out *BackendRouteStatus) {
	*out = *in
	out.CrossClusterObjectReference = in.CrossClusterObjectReference
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendRouteStatus.
func (in *BackendRouteStatus) DeepCopy() *BackendRouteStatus {
	if in == nil {
		return nil
	}
	out := new(BackendRouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendRouting) DeepCopyInto(out *BackendRouting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendRouting.
func (in *BackendRouting) DeepCopy() *BackendRouting {
	if in == nil {
		return nil
	}
	out := new(BackendRouting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendRouting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendRoutingList) DeepCopyInto(out *BackendRoutingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackendRouting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendRoutingList.
func (in *BackendRoutingList) DeepCopy() *BackendRoutingList {
	if in == nil {
		return nil
	}
	out := new(BackendRoutingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendRoutingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendRoutingSpec) DeepCopyInto(out *BackendRoutingSpec) {
	*out = *in
	out.Backend = in.Backend
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]CrossClusterObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Forwarding != nil {
		in, out := &in.Forwarding, &out.Forwarding
		*out = new(BackendForwarding)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendRoutingSpec.
func (in *BackendRoutingSpec) DeepCopy() *BackendRoutingSpec {
	if in == nil {
		return nil
	}
	out := new(BackendRoutingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendRoutingStatus) DeepCopyInto(out *BackendRoutingStatus) {
	*out = *in
	in.Backends.DeepCopyInto(&out.Backends)
	if in.RouteStatuses != nil {
		in, out := &in.RouteStatuses, &out.RouteStatuses
		*out = make([]BackendRouteStatus, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendRoutingStatus.
func (in *BackendRoutingStatus) DeepCopy() *BackendRoutingStatus {
	if in == nil {
		return nil
	}
	out := new(BackendRoutingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendStatus) DeepCopyInto(out *BackendStatus) {
	*out = *in
	in.Conditions.DeepCopyInto(&out.Conditions)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendStatus.
func (in *BackendStatus) DeepCopy() *BackendStatus {
	if in == nil {
		return nil
	}
	out := new(BackendStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendStatuses) DeepCopyInto(out *BackendStatuses) {
	*out = *in
	in.Origin.DeepCopyInto(&out.Origin)
	in.Stable.DeepCopyInto(&out.Stable)
	in.Canary.DeepCopyInto(&out.Canary)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendStatuses.
func (in *BackendStatuses) DeepCopy() *BackendStatuses {
	if in == nil {
		return nil
	}
	out := new(BackendStatuses)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchProgressingInfo) DeepCopyInto(out *BatchProgressingInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchProgressingInfo.
func (in *BatchProgressingInfo) DeepCopy() *BatchProgressingInfo {
	if in == nil {
		return nil
	}
	out := new(BatchProgressingInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchStrategy) DeepCopyInto(out *BatchStrategy) {
	*out = *in
	if in.Batches != nil {
		in, out := &in.Batches, &out.Batches
		*out = make([]RolloutStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Toleration != nil {
		in, out := &in.Toleration, &out.Toleration
		*out = new(TolerationStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchStrategy.
func (in *BatchStrategy) DeepCopy() *BatchStrategy {
	if in == nil {
		return nil
	}
	out := new(BatchStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryBackendRule) DeepCopyInto(out *CanaryBackendRule) {
	*out = *in
	in.TrafficStrategy.DeepCopyInto(&out.TrafficStrategy)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryBackendRule.
func (in *CanaryBackendRule) DeepCopy() *CanaryBackendRule {
	if in == nil {
		return nil
	}
	out := new(CanaryBackendRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryProgressingInfo) DeepCopyInto(out *CanaryProgressingInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryProgressingInfo.
func (in *CanaryProgressingInfo) DeepCopy() *CanaryProgressingInfo {
	if in == nil {
		return nil
	}
	out := new(CanaryProgressingInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanaryStrategy) DeepCopyInto(out *CanaryStrategy) {
	*out = *in
	out.Replicas = in.Replicas
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = new(TrafficStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = new(ResourceMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PodTemplateMetadataPatch != nil {
		in, out := &in.PodTemplateMetadataPatch, &out.PodTemplateMetadataPatch
		*out = new(MetadataPatch)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanaryStrategy.
func (in *CanaryStrategy) DeepCopy() *CanaryStrategy {
	if in == nil {
		return nil
	}
	out := new(CanaryStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeReasonMessage) DeepCopyInto(out *CodeReasonMessage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeReasonMessage.
func (in *CodeReasonMessage) DeepCopy() *CodeReasonMessage {
	if in == nil {
		return nil
	}
	out := new(CodeReasonMessage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Condition) DeepCopyInto(out *Condition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossClusterObjectNameReference) DeepCopyInto(out *CrossClusterObjectNameReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossClusterObjectNameReference.
func (in *CrossClusterObjectNameReference) DeepCopy() *CrossClusterObjectNameReference {
	if in == nil {
		return nil
	}
	out := new(CrossClusterObjectNameReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossClusterObjectReference) DeepCopyInto(out *CrossClusterObjectReference) {
	*out = *in
	out.ObjectTypeRef = in.ObjectTypeRef
	out.CrossClusterObjectNameReference = in.CrossClusterObjectNameReference
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossClusterObjectReference.
func (in *CrossClusterObjectReference) DeepCopy() *CrossClusterObjectReference {
	if in == nil {
		return nil
	}
	out := new(CrossClusterObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRouteFilter) DeepCopyInto(out *HTTPRouteFilter) {
	*out = *in
	if in.RequestHeaderModifier != nil {
		in, out := &in.RequestHeaderModifier, &out.RequestHeaderModifier
		*out = new(v1.HTTPHeaderFilter)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRouteFilter.
func (in *HTTPRouteFilter) DeepCopy() *HTTPRouteFilter {
	if in == nil {
		return nil
	}
	out := new(HTTPRouteFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRouteMatch) DeepCopyInto(out *HTTPRouteMatch) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]v1.HTTPHeaderMatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryParams != nil {
		in, out := &in.QueryParams, &out.QueryParams
		*out = make([]v1.HTTPQueryParamMatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRouteMatch.
func (in *HTTPRouteMatch) DeepCopy() *HTTPRouteMatch {
	if in == nil {
		return nil
	}
	out := new(HTTPRouteMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRouteRule) DeepCopyInto(out *HTTPRouteRule) {
	*out = *in
	if in.Matches != nil {
		in, out := &in.Matches, &out.Matches
		*out = make([]HTTPRouteMatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Filter.DeepCopyInto(&out.Filter)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRouteRule.
func (in *HTTPRouteRule) DeepCopy() *HTTPRouteRule {
	if in == nil {
		return nil
	}
	out := new(HTTPRouteRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataPatch) DeepCopyInto(out *MetadataPatch) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataPatch.
func (in *MetadataPatch) DeepCopy() *MetadataPatch {
	if in == nil {
		return nil
	}
	out := new(MetadataPatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTypeRef) DeepCopyInto(out *ObjectTypeRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTypeRef.
func (in *ObjectTypeRef) DeepCopy() *ObjectTypeRef {
	if in == nil {
		return nil
	}
	out := new(ObjectTypeRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProgressingInfo) DeepCopyInto(out *ProgressingInfo) {
	*out = *in
	if in.Canary != nil {
		in, out := &in.Canary, &out.Canary
		*out = new(CanaryProgressingInfo)
		**out = **in
	}
	if in.Batch != nil {
		in, out := &in.Batch, &out.Batch
		*out = new(BatchProgressingInfo)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProgressingInfo.
func (in *ProgressingInfo) DeepCopy() *ProgressingInfo {
	if in == nil {
		return nil
	}
	out := new(ProgressingInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceMatch) DeepCopyInto(out *ResourceMatch) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]CrossClusterObjectNameReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceMatch.
func (in *ResourceMatch) DeepCopy() *ResourceMatch {
	if in == nil {
		return nil
	}
	out := new(ResourceMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rollout) DeepCopyInto(out *Rollout) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rollout.
func (in *Rollout) DeepCopy() *Rollout {
	if in == nil {
		return nil
	}
	out := new(Rollout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Rollout) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutBatchStatus) DeepCopyInto(out *RolloutBatchStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutBatchStatus.
func (in *RolloutBatchStatus) DeepCopy() *RolloutBatchStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutBatchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutList) DeepCopyInto(out *RolloutList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Rollout, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutList.
func (in *RolloutList) DeepCopy() *RolloutList {
	if in == nil {
		return nil
	}
	out := new(RolloutList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RolloutList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutReplicasSummary) DeepCopyInto(out *RolloutReplicasSummary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutReplicasSummary.
func (in *RolloutReplicasSummary) DeepCopy() *RolloutReplicasSummary {
	if in == nil {
		return nil
	}
	out := new(RolloutReplicasSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRun) DeepCopyInto(out *RolloutRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRun.
func (in *RolloutRun) DeepCopy() *RolloutRun {
	if in == nil {
		return nil
	}
	out := new(RolloutRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RolloutRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunBatchStatus) DeepCopyInto(out *RolloutRunBatchStatus) {
	*out = *in
	out.RolloutBatchStatus = in.RolloutBatchStatus
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]RolloutRunStepStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunBatchStatus.
func (in *RolloutRunBatchStatus) DeepCopy() *RolloutRunBatchStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutRunBatchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunBatchStrategy) DeepCopyInto(out *RolloutRunBatchStrategy) {
	*out = *in
	if in.Batches != nil {
		in, out := &in.Batches, &out.Batches
		*out = make([]RolloutRunStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Toleration != nil {
		in, out := &in.Toleration, &out.Toleration
		*out = new(TolerationStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunBatchStrategy.
func (in *RolloutRunBatchStrategy) DeepCopy() *RolloutRunBatchStrategy {
	if in == nil {
		return nil
	}
	out := new(RolloutRunBatchStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunCanaryStrategy) DeepCopyInto(out *RolloutRunCanaryStrategy) {
	*out = *in
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]RolloutRunStepTarget, len(*in))
		copy(*out, *in)
	}
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = new(TrafficStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PodTemplateMetadataPatch != nil {
		in, out := &in.PodTemplateMetadataPatch, &out.PodTemplateMetadataPatch
		*out = new(MetadataPatch)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunCanaryStrategy.
func (in *RolloutRunCanaryStrategy) DeepCopy() *RolloutRunCanaryStrategy {
	if in == nil {
		return nil
	}
	out := new(RolloutRunCanaryStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunList) DeepCopyInto(out *RolloutRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RolloutRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunList.
func (in *RolloutRunList) DeepCopy() *RolloutRunList {
	if in == nil {
		return nil
	}
	out := new(RolloutRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RolloutRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunSpec) DeepCopyInto(out *RolloutRunSpec) {
	*out = *in
	out.TargetType = in.TargetType
	if in.Webhooks != nil {
		in, out := &in.Webhooks, &out.Webhooks
		*out = make([]RolloutWebhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficTopologyRefs != nil {
		in, out := &in.TrafficTopologyRefs, &out.TrafficTopologyRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Canary != nil {
		in, out := &in.Canary, &out.Canary
		*out = new(RolloutRunCanaryStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Batch != nil {
		in, out := &in.Batch, &out.Batch
		*out = new(RolloutRunBatchStrategy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunSpec.
func (in *RolloutRunSpec) DeepCopy() *RolloutRunSpec {
	if in == nil {
		return nil
	}
	out := new(RolloutRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunStatus) DeepCopyInto(out *RolloutRunStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(CodeReasonMessage)
		**out = **in
	}
	if in.CanaryStatus != nil {
		in, out := &in.CanaryStatus, &out.CanaryStatus
		*out = new(RolloutRunStepStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.BatchStatus != nil {
		in, out := &in.BatchStatus, &out.BatchStatus
		*out = new(RolloutRunBatchStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetStatuses != nil {
		in, out := &in.TargetStatuses, &out.TargetStatuses
		*out = make([]RolloutWorkloadStatus, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunStatus.
func (in *RolloutRunStatus) DeepCopy() *RolloutRunStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunStep) DeepCopyInto(out *RolloutRunStep) {
	*out = *in
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]RolloutRunStepTarget, len(*in))
		copy(*out, *in)
	}
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = new(TrafficStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunStep.
func (in *RolloutRunStep) DeepCopy() *RolloutRunStep {
	if in == nil {
		return nil
	}
	out := new(RolloutRunStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunStepStatus) DeepCopyInto(out *RolloutRunStepStatus) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(int32)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.FinishTime != nil {
		in, out := &in.FinishTime, &out.FinishTime
		*out = (*in).DeepCopy()
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]RolloutWorkloadStatus, len(*in))
		copy(*out, *in)
	}
	if in.Webhooks != nil {
		in, out := &in.Webhooks, &out.Webhooks
		*out = make([]RolloutWebhookStatus, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunStepStatus.
func (in *RolloutRunStepStatus) DeepCopy() *RolloutRunStepStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutRunStepStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutRunStepTarget) DeepCopyInto(out *RolloutRunStepTarget) {
	*out = *in
	out.CrossClusterObjectNameReference = in.CrossClusterObjectNameReference
	out.Replicas = in.Replicas
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutRunStepTarget.
func (in *RolloutRunStepTarget) DeepCopy() *RolloutRunStepTarget {
	if in == nil {
		return nil
	}
	out := new(RolloutRunStepTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutSpec) DeepCopyInto(out *RolloutSpec) {
	*out = *in
	if in.HistoryLimit != nil {
		in, out := &in.HistoryLimit, &out.HistoryLimit
		*out = new(int32)
		**out = **in
	}
	in.WorkloadRef.DeepCopyInto(&out.WorkloadRef)
	if in.TrafficTopologyRefs != nil {
		in, out := &in.TrafficTopologyRefs, &out.TrafficTopologyRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutSpec.
func (in *RolloutSpec) DeepCopy() *RolloutSpec {
	if in == nil {
		return nil
	}
	out := new(RolloutSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutStatus) DeepCopyInto(out *RolloutStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutStatus.
func (in *RolloutStatus) DeepCopy() *RolloutStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutStep) DeepCopyInto(out *RolloutStep) {
	*out = *in
	out.Replicas = in.Replicas
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = new(TrafficStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = new(ResourceMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutStep.
func (in *RolloutStep) DeepCopy() *RolloutStep {
	if in == nil {
		return nil
	}
	out := new(RolloutStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutStrategy) DeepCopyInto(out *RolloutStrategy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Canary != nil {
		in, out := &in.Canary, &out.Canary
		*out = new(CanaryStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Batch != nil {
		in, out := &in.Batch, &out.Batch
		*out = new(BatchStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Webhooks != nil {
		in, out := &in.Webhooks, &out.Webhooks
		*out = make([]RolloutWebhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutStrategy.
func (in *RolloutStrategy) DeepCopy() *RolloutStrategy {
	if in == nil {
		return nil
	}
	out := new(RolloutStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RolloutStrategy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutStrategyList) DeepCopyInto(out *RolloutStrategyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RolloutStrategy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutStrategyList.
func (in *RolloutStrategyList) DeepCopy() *RolloutStrategyList {
	if in == nil {
		return nil
	}
	out := new(RolloutStrategyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RolloutStrategyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWebhook) DeepCopyInto(out *RolloutWebhook) {
	*out = *in
	if in.HookTypes != nil {
		in, out := &in.HookTypes, &out.HookTypes
		*out = make([]HookType, len(*in))
		copy(*out, *in)
	}
	in.ClientConfig.DeepCopyInto(&out.ClientConfig)
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWebhook.
func (in *RolloutWebhook) DeepCopy() *RolloutWebhook {
	if in == nil {
		return nil
	}
	out := new(RolloutWebhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWebhookReview) DeepCopyInto(out *RolloutWebhookReview) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWebhookReview.
func (in *RolloutWebhookReview) DeepCopy() *RolloutWebhookReview {
	if in == nil {
		return nil
	}
	out := new(RolloutWebhookReview)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RolloutWebhookReview) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWebhookReviewBatch) DeepCopyInto(out *RolloutWebhookReviewBatch) {
	*out = *in
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]RolloutRunStepTarget, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWebhookReviewBatch.
func (in *RolloutWebhookReviewBatch) DeepCopy() *RolloutWebhookReviewBatch {
	if in == nil {
		return nil
	}
	out := new(RolloutWebhookReviewBatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWebhookReviewCanary) DeepCopyInto(out *RolloutWebhookReviewCanary) {
	*out = *in
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]RolloutRunStepTarget, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWebhookReviewCanary.
func (in *RolloutWebhookReviewCanary) DeepCopy() *RolloutWebhookReviewCanary {
	if in == nil {
		return nil
	}
	out := new(RolloutWebhookReviewCanary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWebhookReviewSpec) DeepCopyInto(out *RolloutWebhookReviewSpec) {
	*out = *in
	out.TargetType = in.TargetType
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Canary != nil {
		in, out := &in.Canary, &out.Canary
		*out = new(RolloutWebhookReviewCanary)
		(*in).DeepCopyInto(*out)
	}
	if in.Batch != nil {
		in, out := &in.Batch, &out.Batch
		*out = new(RolloutWebhookReviewBatch)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWebhookReviewSpec.
func (in *RolloutWebhookReviewSpec) DeepCopy() *RolloutWebhookReviewSpec {
	if in == nil {
		return nil
	}
	out := new(RolloutWebhookReviewSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWebhookReviewStatus) DeepCopyInto(out *RolloutWebhookReviewStatus) {
	*out = *in
	out.CodeReasonMessage = in.CodeReasonMessage
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWebhookReviewStatus.
func (in *RolloutWebhookReviewStatus) DeepCopy() *RolloutWebhookReviewStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutWebhookReviewStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWebhookStatus) DeepCopyInto(out *RolloutWebhookStatus) {
	*out = *in
	out.CodeReasonMessage = in.CodeReasonMessage
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWebhookStatus.
func (in *RolloutWebhookStatus) DeepCopy() *RolloutWebhookStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutWebhookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutWorkloadStatus) DeepCopyInto(out *RolloutWorkloadStatus) {
	*out = *in
	out.RolloutReplicasSummary = in.RolloutReplicasSummary
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutWorkloadStatus.
func (in *RolloutWorkloadStatus) DeepCopy() *RolloutWorkloadStatus {
	if in == nil {
		return nil
	}
	out := new(RolloutWorkloadStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRef) DeepCopyInto(out *RouteRef) {
	*out = *in
	if in.APIVersion != nil {
		in, out := &in.APIVersion, &out.APIVersion
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRef.
func (in *RouteRef) DeepCopy() *RouteRef {
	if in == nil {
		return nil
	}
	out := new(RouteRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StableBackendRule) DeepCopyInto(out *StableBackendRule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StableBackendRule.
func (in *StableBackendRule) DeepCopy() *StableBackendRule {
	if in == nil {
		return nil
	}
	out := new(StableBackendRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TolerationStrategy) DeepCopyInto(out *TolerationStrategy) {
	*out = *in
	if in.WorkloadFailureThreshold != nil {
		in, out := &in.WorkloadFailureThreshold, &out.WorkloadFailureThreshold
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.TaskFailureThreshold != nil {
		in, out := &in.TaskFailureThreshold, &out.TaskFailureThreshold
		*out = new(intstr.IntOrString)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TolerationStrategy.
func (in *TolerationStrategy) DeepCopy() *TolerationStrategy {
	if in == nil {
		return nil
	}
	out := new(TolerationStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyInfo) DeepCopyInto(out *TopologyInfo) {
	*out = *in
	out.WorkloadRef = in.WorkloadRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyInfo.
func (in *TopologyInfo) DeepCopy() *TopologyInfo {
	if in == nil {
		return nil
	}
	out := new(TopologyInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficStrategy) DeepCopyInto(out *TrafficStrategy) {
	*out = *in
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int32)
		**out = **in
	}
	if in.HTTPRule != nil {
		in, out := &in.HTTPRule, &out.HTTPRule
		*out = new(HTTPRouteRule)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficStrategy.
func (in *TrafficStrategy) DeepCopy() *TrafficStrategy {
	if in == nil {
		return nil
	}
	out := new(TrafficStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficTopology) DeepCopyInto(out *TrafficTopology) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficTopology.
func (in *TrafficTopology) DeepCopy() *TrafficTopology {
	if in == nil {
		return nil
	}
	out := new(TrafficTopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficTopology) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficTopologyList) DeepCopyInto(out *TrafficTopologyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrafficTopology, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficTopologyList.
func (in *TrafficTopologyList) DeepCopy() *TrafficTopologyList {
	if in == nil {
		return nil
	}
	out := new(TrafficTopologyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficTopologyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficTopologySpec) DeepCopyInto(out *TrafficTopologySpec) {
	*out = *in
	in.WorkloadRef.DeepCopyInto(&out.WorkloadRef)
	in.Backend.DeepCopyInto(&out.Backend)
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]RouteRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficTopologySpec.
func (in *TrafficTopologySpec) DeepCopy() *TrafficTopologySpec {
	if in == nil {
		return nil
	}
	out := new(TrafficTopologySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficTopologyStatus) DeepCopyInto(out *TrafficTopologyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topologies != nil {
		in, out := &in.Topologies, &out.Topologies
		*out = make([]TopologyInfo, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficTopologyStatus.
func (in *TrafficTopologyStatus) DeepCopy() *TrafficTopologyStatus {
	if in == nil {
		return nil
	}
	out := new(TrafficTopologyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookClientConfig) DeepCopyInto(out *WebhookClientConfig) {
	*out = *in
	if in.CABundle != nil {
		in, out := &in.CABundle, &out.CABundle
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookClientConfig.
func (in *WebhookClientConfig) DeepCopy() *WebhookClientConfig {
	if in == nil {
		return nil
	}
	out := new(WebhookClientConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadRef) DeepCopyInto(out *WorkloadRef) {
	*out = *in
	in.Match.DeepCopyInto(&out.Match)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadRef.
func (in *WorkloadRef) DeepCopy() *WorkloadRef {
	if in == nil {
		return nil
	}
	out := new(WorkloadRef)
	in.DeepCopyInto(out)
	return out
}
